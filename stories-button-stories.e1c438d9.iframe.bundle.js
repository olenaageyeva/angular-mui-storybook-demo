(self.webpackChunkangular_mui_storybook_demo=self.webpackChunkangular_mui_storybook_demo||[]).push([[284],{"./src/stories/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Icon:()=>Icon,Primary:()=>Primary,Secondary:()=>Secondary,Text:()=>Text,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var button_componentngResource=__webpack_require__("./src/app/components/button/button.component.scss?ngResource"),button_componentngResource_default=__webpack_require__.n(button_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),icon=__webpack_require__("./node_modules/@angular/material/fesm2022/icon.mjs");let ButtonComponent=class ButtonComponent{constructor(){this.variant="text",this.click=new core.EventEmitter}onClick(event){this.click.emit(event)}static#_=this.propDecorators={variant:[{type:core.Input}],options:[{type:core.Input}],click:[{type:core.Output}]}};ButtonComponent=(0,tslib_es6.UN)([(0,core.Component)({selector:"my-button",standalone:!0,imports:[common.CommonModule,fesm2022_button.oJ,icon.oB],template:'<ng-container *ngIf="variant===\'text\'">\r\n    <button mat-button [color]="options?.color" [disabled]="options?.disabled">\r\n        <ng-container [ngTemplateOutlet]="buttonContent"></ng-container>        \r\n    </button>\r\n</ng-container>\r\n\r\n<ng-container *ngIf="variant===\'primary\'">\r\n    <button mat-flat-button [color]="options?.color" [disabled]="options?.disabled">\r\n        <ng-container [ngTemplateOutlet]="buttonContent"></ng-container>        \r\n    </button>   \r\n</ng-container>\r\n\r\n<ng-container *ngIf="variant===\'secondary\'">\r\n    <button mat-stroked-button [color]="options?.color" [disabled]="options?.disabled">\r\n        <ng-container [ngTemplateOutlet]="buttonContent"></ng-container>        \r\n    </button>\r\n</ng-container>\r\n\r\n<ng-container *ngIf="variant===\'icon\'">\r\n    <button mat-icon-button [color]="options?.color" [disabled]="options?.disabled" aria-label="icon-button">\r\n        <mat-icon>{{options?.icon}}</mat-icon>\r\n    </button>\r\n</ng-container>\r\n\r\n<ng-template #buttonContent>\r\n    <ng-content></ng-content>\r\n</ng-template>',styles:[button_componentngResource_default()]})],ButtonComponent);const button_stories={title:"Example/Button",component:ButtonComponent,tags:["autodocs"],decorators:[(0,dist.moduleMetadata)({imports:[fesm2022_button.oJ,icon.oB,ButtonComponent]})],render:args=>({props:{backgroundColor:null,...args}}),argTypes:{options:{control:"object"},variant:{control:{type:"select",options:["text","primary","secondary","icon"]}}}},Template=args=>({props:args,template:'<my-button [variant]="variant" [options]="options" (click)="onClick($event)">\n  {{options?.label || \'Click me!\'}}\n  </my-button>'}),Text=Template.bind({});Text.args={variant:"text",options:{label:"Click me!",disabled:!1,color:"primary"}};const Primary=Template.bind({});Primary.args={variant:"primary",options:{label:"Click me!",disabled:!1,color:"primary"}};const Secondary=Template.bind({});Secondary.args={variant:"secondary",options:{label:"Click me!",disabled:!1,color:"primary"}};const Icon=Template.bind({});Icon.args={variant:"icon",options:{label:"favorite",icon:"favorite",disabled:!1,color:"primary"}},Text.parameters={...Text.parameters,docs:{...Text.parameters?.docs,source:{originalSource:'(args: ButtonComponent) => ({\n  props: args,\n  template: `<my-button [variant]="variant" [options]="options" (click)="onClick($event)">\n  {{options?.label || \'Click me!\'}}\n  </my-button>`\n})',...Text.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'(args: ButtonComponent) => ({\n  props: args,\n  template: `<my-button [variant]="variant" [options]="options" (click)="onClick($event)">\n  {{options?.label || \'Click me!\'}}\n  </my-button>`\n})',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'(args: ButtonComponent) => ({\n  props: args,\n  template: `<my-button [variant]="variant" [options]="options" (click)="onClick($event)">\n  {{options?.label || \'Click me!\'}}\n  </my-button>`\n})',...Secondary.parameters?.docs?.source}}},Icon.parameters={...Icon.parameters,docs:{...Icon.parameters?.docs,source:{originalSource:'(args: ButtonComponent) => ({\n  props: args,\n  template: `<my-button [variant]="variant" [options]="options" (click)="onClick($event)">\n  {{options?.label || \'Click me!\'}}\n  </my-button>`\n})',...Icon.parameters?.docs?.source}}};const __namedExportsOrder=["Text","Primary","Secondary","Icon"]},"./src/app/components/button/button.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);